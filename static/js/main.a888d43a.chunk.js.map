{"version":3,"sources":["context/useSettings.tsx","theme/index.ts","theme/typography.ts","theme/shadows.ts","components/LoadingScreen.tsx","navigation/public.path/montreal.page.ts","navigation/public.path/toronto.page.ts","navigation/public.path/ottawa.page.ts","layouts/@shared/TopBar.tsx","navigation/public.path/index.ts","layouts/public.layout/index.tsx","navigation/path.ts","navigation/index.tsx","components/GlobalStyles.tsx","App.tsx","index.tsx","utils/axios.ts","constants/cityCoords.ts","config/index.ts","api/weather.ts","context/useWeather.tsx","hooks/useAsync.ts"],"names":["defaultSettings","direction","responsiveFontSizes","theme","SettingsContext","createContext","settings","saveSettings","SettingsProvider","children","useState","currentSettings","setCurrentSettings","storeSettings","window","localStorage","setItem","JSON","stringify","useEffect","restoredSettings","storedData","getItem","parse","err","console","error","restoreSettings","document","dir","Provider","value","update","mergedSettings","_","merge","baseOptions","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","themesOptions","palette","background","default","colors","common","white","paper","primary","main","secondary","text","blueGrey","shadows","LoadingScreen","NProgress","start","done","Box","sx","alignItems","display","flexDirection","height","justifyContent","minHeight","padding","spacing","width","LinearProgress","route","path","component","lazy","providers","other","WeatherProvider","city","useStyles","makeStyles","activeMenu","color","TopBar","classes","menu","title","link","MontrealPage","TorontoPage","OttawaPage","map","m","p","Button","textTransform","fontWeightLight","NavLink","activeClassName","to","Typography","variant","guards","layout","backgroundColor","grey","Container","maxWidth","routes","montrealPage","ottawaPage","torontoPage","redirect","renderGuards","render","guardsClone","Guard","shift","renderRoutes","routesArray","fallback","i","Layout","Fragment","Component","push","exact","props","providersClone","renderProviders","GlobalStyles","CssBaseline","App","useContext","config","themeOptions","warn","Error","createMuiTheme","createTheme","ThemeProvider","dense","maxSnack","navigation","ReactDOM","getElementById","axiosInstance","axios","create","timeout","interceptors","response","use","errorMsg","data","errors","message","Promise","reject","cityCoords","ottawa","lat","lon","toronto","montreal","WeatherAPI","query","adaptedQuery","product","output","myURL","queryString","stringifyUrl","url","get","weatherAPI","WeatherContext","weatherDays","isLoadingWeather","getWeather","resolve","setWeatherDays","_getWeather","dataseries","weatherDay","image","weather","temperature","temp2m","max","min","description","dateFormated","moment","date","format","payload","React","setError","setData","isLoading","setLoading","enqueueSnackbar","useSnackbar","asyncFunction","executeOnMount","onSuccess","onError","params","doAsync","otherParams","undefined","useAsync","res","useWeather"],"mappings":"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","file":"static/js/main.a888d43a.chunk.js","sourcesContent":["import { useContext } from 'react';\nimport { createContext, useEffect, useState } from 'react';\nimport type { FC, ReactNode } from 'react';\nimport _ from 'lodash';\nimport { Direction, ThemeName } from 'src/@types/theme';\n\ninterface Settings {\n  direction?: Direction;\n  responsiveFontSizes?: boolean;\n  theme?: ThemeName;\n}\n\ninterface ISettingsContext {\n  settings: Settings;\n  saveSettings: (update: Settings) => void;\n}\n\ninterface IProps {\n  settings?: Settings;\n  children?: ReactNode;\n}\n\nconst defaultSettings: Settings = {\n  direction: 'ltr',\n  responsiveFontSizes: true,\n  theme: 'light'\n};\n\nconst SettingsContext = createContext<ISettingsContext>({\n  settings: defaultSettings,\n  saveSettings: () => {}\n});\n\nexport const SettingsProvider: FC<IProps> = ({ settings, children }) => {\n  const [currentSettings, setCurrentSettings] = useState<Settings>(settings || defaultSettings);\n\n  const restoreSettings = (): Settings | null => {\n    let settings = null;\n\n    try {\n      const storedData: string | null = window.localStorage.getItem('settings');\n\n      if (storedData) {\n        settings = JSON.parse(storedData);\n      }\n    } catch (err) {\n      console.error(err);\n      // If stored data is not a strigified JSON this will fail,\n      // that's why we catch the error\n    }\n\n    return settings;\n  };\n\n  const storeSettings = (settings: Settings): void => {\n    window.localStorage.setItem('settings', JSON.stringify(settings));\n  };\n\n  const handleSaveSettings = (update: Settings = {}): void => {\n    const mergedSettings = _.merge({}, currentSettings, update);\n\n    setCurrentSettings(mergedSettings);\n    storeSettings(mergedSettings);\n  };\n\n  useEffect(() => {\n    const restoredSettings = restoreSettings();\n\n    if (restoredSettings) {\n      setCurrentSettings(restoredSettings);\n    }\n  }, []);\n\n  useEffect(() => {\n    //@ts-ignore\n    document.dir = currentSettings.direction;\n  }, [currentSettings]);\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        settings: currentSettings,\n        saveSettings: handleSaveSettings\n      }}\n    >\n      {children}\n    </SettingsContext.Provider>\n  );\n};\n\nexport const useSettings = (): ISettingsContext => useContext(SettingsContext);\n","import _ from 'lodash';\nimport { colors, responsiveFontSizes, createTheme as createMuiTheme, ThemeOptions } from '@mui/material';\nimport type { Theme as MuiTheme } from '@mui/material';\nimport type { Palette as MuiPalette, TypeBackground as MuiTypeBackground } from '@mui/material/styles/createPalette';\nimport { softShadows } from './shadows';\nimport typography from './typography';\nimport { Direction, ThemeName } from 'src/@types/theme';\n\ninterface TypeBackground extends MuiTypeBackground {\n  dark: string;\n}\n\ninterface Palette extends MuiPalette {\n  background: TypeBackground;\n}\n\nexport interface Theme extends MuiTheme {\n  name: ThemeName;\n  palette: Palette;\n}\n\ninterface ThemeConfig {\n  direction?: Direction;\n  responsiveFontSizes?: boolean;\n  theme?: ThemeName;\n}\n\nconst baseOptions: ThemeOptions = {\n  direction: 'ltr',\n  typography\n};\n\nconst themesOptions: ThemeOptions[] = [\n  {\n    palette: {\n      background: {\n        default: colors.common.white,\n        paper: '#EEF6FB'\n      },\n      primary: {\n        main: '#5FB0E8'\n      },\n      secondary: {\n        main: '#0b4b78'\n      },\n      text: {\n        primary: colors.blueGrey[900],\n        secondary: colors.blueGrey[600]\n      }\n    },\n    shadows: softShadows\n  }\n];\n\nexport const createTheme = (config: ThemeConfig = {}): Theme => {\n  let themeOptions = themesOptions[0];\n\n  if (!themeOptions) {\n    console.warn(new Error(`The theme ${config.theme} is not valid`));\n    [themeOptions] = themesOptions;\n  }\n\n  let theme = createMuiTheme(_.merge({}, baseOptions, themeOptions, { direction: config.direction }));\n\n  if (config.responsiveFontSizes) {\n    theme = responsiveFontSizes(theme);\n  }\n\n  return theme as Theme;\n};\n","const typo = {\n  h1: {\n    fontWeight: 10,\n    fontSize: 80,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 10,\n    fontSize: 30,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 10,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n\nexport default typo;\n","import type { Shadows } from '@mui/material/styles/shadows';\n\nexport const softShadows: Shadows = [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n\nexport const strongShadows: Shadows = [\n  'none',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 3px 4px -2px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 2px 2px -2px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 3px 4px -2px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 3px 4px -2px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 4px 6px -2px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 4px 6px -2px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 4px 8px -2px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 5px 8px -2px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 6px 12px -4px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 7px 12px -4px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 6px 16px -4px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 7px 16px -4px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 8px 18px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 9px 18px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 10px 20px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 11px 20px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 12px 22px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 13px 22px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 14px 24px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 16px 28px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 18px 30px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 20px 32px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 22px 34px -8px rgba(0,0,0,0.50)',\n  '0 0 1px 0 rgba(0,0,0,0.70), 0 24px 36px -8px rgba(0,0,0,0.50)'\n];\n","import { useEffect } from 'react';\nimport type { FC } from 'react';\nimport NProgress from 'nprogress';\nimport { Box, LinearProgress } from '@mui/material';\n\nconst LoadingScreen: FC = () => {\n  useEffect(() => {\n    NProgress.start();\n\n    return () => {\n      NProgress.done();\n    };\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center',\n        minHeight: '100%',\n        padding: (theme) => theme.spacing(3)\n      }}\n    >\n      <Box width={400}>\n        <LinearProgress />\n      </Box>\n    </Box>\n  );\n};\n\nexport default LoadingScreen;\n","import type { IRoute } from 'src/navigation/@types/route';\nimport { lazy } from 'react';\nimport { WeatherProvider } from 'src/context/useWeather';\n\nconst route: IRoute = {\n  path: () => '/public/montreal',\n  component: lazy(() => import('src/views/public.path/montreal.page')),\n  providers: [({ ...other }) => WeatherProvider({ city: 'montreal', ...other })]\n};\n\nexport default route;\n","import type { IRoute } from 'src/navigation/@types/route';\nimport { lazy } from 'react';\nimport { WeatherProvider } from 'src/context/useWeather';\n\nconst route: IRoute = {\n  path: () => '/public/toronto',\n  component: lazy(() => import('src/views/public.path/toronto.page')),\n  providers: [({ ...other }) => WeatherProvider({ city: 'toronto', ...other })]\n};\n\nexport default route;\n","import type { IRoute } from 'src/navigation/@types/route';\nimport { lazy } from 'react';\nimport { WeatherProvider } from 'src/context/useWeather';\n\nconst route: IRoute = {\n  path: () => '/public/ottawa',\n  component: lazy(() => import('src/views/public.path/ottawa.page')),\n  providers: [({ ...other }) => WeatherProvider({ city: 'ottawa', ...other })]\n};\n\nexport default route;\n","import { Box, Button, Typography } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { NavLink } from 'react-router-dom';\n\nimport MontrealPage from 'src/navigation/public.path/montreal.page';\nimport TorontoPage from 'src/navigation/public.path/toronto.page';\nimport OttawaPage from 'src/navigation/public.path/ottawa.page';\n\nimport type { FC } from 'react';\nimport { Theme } from 'src/theme';\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  activeMenu: {\n    color: theme.palette.primary.main\n  }\n}));\n\nconst TopBar: FC<IProps> = () => {\n  const classes = useStyles();\n\n  const menu = [\n    {\n      title: 'Montreal',\n      link: MontrealPage.path()\n    },\n    {\n      title: 'Toronto',\n      link: TorontoPage.path()\n    },\n    {\n      title: 'Ottawa',\n      link: OttawaPage.path()\n    }\n  ];\n  return (\n    <Box display=\"flex\">\n      {menu.map((m) => (\n        <Box key={m.link} p={2}>\n          <Button\n            sx={{\n              color: (theme) => theme.palette.text.secondary,\n              padding: '10px 8px',\n              justifyContent: 'flex-start',\n              textTransform: 'none',\n              letterSpacing: 0,\n              width: '100%',\n              fontWeight: (theme) => theme.typography.fontWeightLight\n            }}\n            component={NavLink}\n            activeClassName={classes.activeMenu}\n            to={m.link}\n          >\n            <Typography variant=\"h2\">{m.title}</Typography>\n          </Button>\n        </Box>\n      ))}\n    </Box>\n  );\n};\n\nexport { TopBar };\n","import type { IRoute } from 'src/navigation/@types/route';\nimport PublicLayout from 'src/layouts/public.layout';\nimport montrealPage from './montreal.page';\nimport ottawaPage from './ottawa.page';\nimport torontoPage from './toronto.page';\n\nconst route: IRoute = {\n  path: () => '/public',\n  guards: [],\n  layout: PublicLayout,\n  routes: [montrealPage, ottawaPage, torontoPage],\n  redirect: montrealPage.path()\n};\n\nexport default route;\n","import type { FC, ReactNode } from 'react';\nimport { Container, Box } from '@mui/material';\nimport { TopBar } from '../@shared/TopBar';\n\ninterface IProps {\n  children?: ReactNode;\n}\n\nconst PublicLayout: FC<IProps> = ({ children }) => {\n  return (\n    <Box sx={{ width: '100vw', height: '100vh', backgroundColor: (theme) => theme.palette.grey['100'] }}>\n      <Container maxWidth=\"xl\" sx={{ minHeight: '100vh' }}>\n        <TopBar />\n        {children}\n      </Container>\n    </Box>\n  );\n};\n\nexport default PublicLayout;\n","import publicPath from './public.path';\n\nimport { IRoute } from 'src/navigation/@types/route';\n\nconst route: IRoute = {\n  path: () => '/',\n  guards: [],\n  providers: [],\n  routes: [publicPath],\n  redirect: publicPath.path()\n};\n\nexport default route;\n","import { Suspense, Fragment } from 'react';\nimport type { FC } from 'react';\nimport { Switch, Redirect, Route } from 'react-router-dom';\nimport LoadingView from 'src/components/LoadingScreen';\nimport root from './path';\n\nimport type { IRoute } from 'src/navigation/@types/route';\n\n/**\n * List of guards to be executed before hitting the render\n */\nconst renderGuards = (guards: FC[] | [] = [], render: FC) => {\n  const guardsClone = [...guards];\n  const Guard = guardsClone.shift(); // get the first el\n  if (Guard) {\n    return <Guard>{renderGuards(guardsClone, render)}</Guard>;\n  }\n  return render({});\n};\n\n/**\n * List of provider (context API) to be executed before hitting the render\n */\nconst renderProviders = (providers: FC[] | [] = [], render: FC) => {\n  const providersClone = [...providers];\n  const Provider = providersClone.shift(); // get the first el\n  if (Provider) {\n    return <Provider>{renderGuards(providersClone, render)}</Provider>;\n  }\n  return render({});\n};\n\nconst renderRoutes = (routesArray: IRoute[]) => (\n  <Suspense fallback={<LoadingView />}>\n    <Switch>\n      {routesArray.map((route, i) => {\n        const Layout = route.layout || Fragment;\n        const Component = route.component;\n        const { path, guards, providers, redirect } = route;\n        let { routes = [] } = route;\n\n        if (redirect) {\n          routes.push({\n            component: () => <Redirect to={redirect} />,\n            path: () => '*',\n            guards: []\n          });\n        }\n\n        return (\n          <Route\n            key={i}\n            path={path()}\n            exact={!!Component}\n            render={(props) =>\n              renderGuards(guards, () =>\n                renderProviders(providers, () => <Layout>{Component ? <Component {...props} /> : renderRoutes(routes)}</Layout>)\n              )\n            }\n          />\n        );\n      })}\n    </Switch>\n  </Suspense>\n);\n\nexport default renderRoutes([root]);\n","import type { FC } from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nconst GlobalStyles: FC = () => {\n  return <CssBaseline />;\n};\n\nexport default GlobalStyles;\n","import { ThemeProvider } from '@mui/material';\nimport { useSettings } from 'src/context/useSettings';\nimport { BrowserRouter } from 'react-router-dom';\nimport { SnackbarProvider } from 'notistack';\n\nimport { createTheme } from 'src/theme';\nimport navigation from 'src/navigation';\n\nimport GlobalStyles from 'src/components/GlobalStyles';\n\nimport type { FC } from 'react';\n\nconst App: FC = () => {\n  const { settings } = useSettings();\n\n  const theme = createTheme({\n    direction: settings.direction,\n    responsiveFontSizes: settings.responsiveFontSizes,\n    theme: settings.theme\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <SnackbarProvider dense maxSnack={3}>\n        <BrowserRouter>\n          <GlobalStyles />\n          {navigation}\n        </BrowserRouter>\n      </SnackbarProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { SettingsProvider } from 'src/context/useSettings';\nimport App from 'src/App';\n\nReactDOM.render(\n  <SettingsProvider>\n    <App />\n  </SettingsProvider>,\n  document.getElementById('root')\n);\n","import axios, { AxiosResponse } from 'axios';\n\nconst axiosInstance = axios.create({\n  timeout: 15000\n});\n\naxiosInstance.interceptors.response.use(\n  function (response) {\n    return response;\n  },\n  function (error: { response: AxiosResponse; message: string }) {\n    const errorMsg = error.response?.data?.errors?.[0]?.message || error.message;\n    return Promise.reject(new Error(errorMsg));\n  }\n);\n\nexport { axiosInstance as axios };\n","export const cityCoords = {\n  ottawa: {\n    lat: 45.4215,\n    lon: -75.6972\n  },\n  toronto: {\n    lat: 43.6532,\n    lon: -79.3832\n  },\n  montreal: {\n    lat: 45.5017,\n    lon: -73.5673\n  }\n};\n","const config = {\n  WEATHER_URL: 'https://www.7timer.info/bin/api.pl'\n};\n\nexport { config };\n","import { axios } from 'src/utils/axios';\nimport queryString from 'query-string';\nimport { IGetWeatherRequest, IGetWeatherResponse } from './@types/weather';\nimport { cityCoords } from 'src/constants/cityCoords';\nimport { config } from 'src/config';\n\nclass WeatherAPI {\n  async getWeather(query: IGetWeatherRequest) {\n    const adaptedQuery = { ...cityCoords[query.city], product: 'civillight', output: 'json' };\n    const myURL = queryString.stringifyUrl({\n      url: config.WEATHER_URL,\n      query: { ...adaptedQuery }\n    });\n    const { data } = await axios.get<IGetWeatherResponse>(myURL);\n    return data;\n  }\n}\n\nconst weatherAPI = new WeatherAPI();\n\nexport { weatherAPI };\n","import { useContext } from 'react';\nimport { createContext, useState } from 'react';\nimport type { FC, ReactNode } from 'react';\nimport _ from 'lodash';\nimport { useAsync } from 'src/hooks/useAsync';\nimport moment from 'moment';\nimport { WeatherCities } from 'src/api/@types/weather';\nimport { weatherAPI } from 'src/api/weather';\n\ninterface WeatherDay {\n  image: string;\n  temperature: number;\n  description: string;\n  dateFormated: string;\n}\n\ninterface IWeatherContext {\n  weatherDays: WeatherDay[];\n  isLoadingWeather: boolean;\n  getWeather: (payload: { city: WeatherCities }) => Promise<WeatherDay[] | undefined>;\n}\n\ninterface IProps {\n  children?: ReactNode;\n  city: WeatherCities;\n}\n\nconst WeatherContext = createContext<IWeatherContext>({\n  weatherDays: [],\n  isLoadingWeather: false,\n  getWeather: () => Promise.resolve([])\n});\n\nexport const WeatherProvider: FC<IProps> = ({ children, city }) => {\n  const [weatherDays, setWeatherDays] = useState<WeatherDay[]>([]);\n\n  const _getWeather = async ({ city }: { city: WeatherCities }): Promise<WeatherDay[]> => {\n    const { dataseries } = await weatherAPI.getWeather({ city });\n    const weatherDays = dataseries.map((weatherDay) => ({\n      image: '/weather_icons/' + weatherDay.weather + '.svg',\n      temperature: (weatherDay.temp2m.max + weatherDay.temp2m.min) / 2,\n      description: weatherDay.weather,\n      dateFormated: moment(`${weatherDay.date}`).format('ddd')\n    }));\n    return weatherDays;\n  };\n\n  const { isLoading: isLoadingWeather, doAsync: getWeather } = useAsync({\n    asyncFunction: _getWeather,\n    params: { city },\n    executeOnMount: true,\n    onSuccess: (res) => {\n      setWeatherDays(res);\n    }\n  });\n\n  return (\n    <WeatherContext.Provider\n      value={{\n        weatherDays,\n        isLoadingWeather,\n        getWeather\n      }}\n    >\n      {children}\n    </WeatherContext.Provider>\n  );\n};\n\nexport const useWeather = (): IWeatherContext => useContext(WeatherContext);\n","import React from 'react';\nimport { useSnackbar } from 'notistack';\n\ninterface IUseAsync<AsyncFuncParams, AsyncFuncResponse> {\n  asyncFunction: (params: AsyncFuncParams) => Promise<AsyncFuncResponse>;\n  params?: AsyncFuncParams;\n  onSuccess?: (res: AsyncFuncResponse) => void;\n  onError?: (res: string) => void;\n  executeOnMount?: boolean;\n}\n\nfunction useAsync<AsyncFuncParams extends Record<string, any>, AsyncFuncResponse>(payload: IUseAsync<AsyncFuncParams, AsyncFuncResponse>) {\n  const [error, setError] = React.useState<string>('');\n  const [data, setData] = React.useState<AsyncFuncResponse>();\n  const [isLoading, setLoading] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { asyncFunction, executeOnMount = true, onSuccess, onError, params = {} } = payload;\n\n  React.useEffect(() => {\n    if (executeOnMount) doAsync();\n  }, []);\n\n  const doAsync = async (otherParams: Partial<AsyncFuncParams> = {}) => {\n    try {\n      setLoading(true);\n      setError('');\n      setData(undefined);\n      const response = await asyncFunction({ ...params, ...(otherParams as any) });\n\n      onSuccess?.(response);\n      setData(response);\n      setLoading(false);\n      return response;\n    } catch (err: any) {\n      const errorMsg = (err?.message || 'Something failed!') as string;\n      setError(errorMsg);\n      onError?.(errorMsg);\n      setData(undefined);\n      setLoading(false);\n      enqueueSnackbar(errorMsg, { variant: 'error' });\n    }\n  };\n\n  return { doAsync, data, error, isLoading };\n}\n\nexport { useAsync };\n"],"sourceRoot":""}