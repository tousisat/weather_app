{"version":3,"sources":["components/Page.tsx","components/Image.tsx","views/public.path/@shared/WeatherBox.tsx","views/public.path/toronto.page.tsx"],"names":["Page","forwardRef","props","ref","children","windowTitle","flexGrow","width","Image","src","alt","height","padding","Box","p","WeatherBox","useWeather","isLoadingWeather","weatherDays","length","firstEl","otherEls","slice","Grid","container","spacing","item","md","border","display","justifyContent","mb","Typography","variant","image","description","ml","temperature","map","weatherDay","i","mt","flexDirection","alignItems","dateFormated","fontWeight","TorontoPage"],"mappings":"kHAAA,sEAUMA,EAAOC,sBAAmC,SAACC,EAAOC,GACtD,IAAQC,EAA0BF,EAA1BE,SAAUC,EAAgBH,EAAhBG,YAElB,OACE,eAAC,IAAG,CAACF,IAAKA,EAAYG,SAAU,EAAGC,MAAM,OAAM,UAC7C,cAAC,IAAM,UACL,gCAAQF,MAETD,IAGP,G,2GCXMI,EAAuB,SAACN,GAC5B,IAAQO,EAA4CP,EAA5CO,IAAI,EAAwCP,EAAvCQ,WAAG,MAAG,QAAO,EAAEC,EAAwBT,EAAxBS,OAAO,EAAiBT,EAAhBU,eAAO,MAAG,EAAC,EAC/C,OACE,cAACC,EAAA,EAAG,CAACC,EAAGF,EAAQ,SACd,qBAAKD,OAAQA,EAAQD,IAAKA,EAAKD,IAAKA,KAG1C,E,QCVMM,EAAyB,WAC7B,MAA0CC,cAAlCC,EAAgB,EAAhBA,iBAAkBC,EAAW,EAAXA,YAC1B,GAAID,EAAkB,OAAO,cAACJ,EAAA,EAAG,yBACjC,GAAIK,EAAYC,OAAS,EAAG,OAAO,cAACN,EAAA,EAAG,yCAEvC,IAAMO,EAAUF,EAAY,GACtBG,EAAWH,EAAYI,MAAM,EAAG,GACtC,OACE,cAACT,EAAA,EAAG,UACF,eAACU,EAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAE,UACzB,eAACF,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,OAAO,kBAAkBd,EAAG,EAAE,UAC/C,cAACD,EAAA,EAAG,CAACgB,QAAQ,OAAOC,eAAe,SAASC,GAAI,EAAE,SAChD,cAACC,EAAA,EAAU,CAACC,QAAQ,KAAI,qBAE1B,cAACpB,EAAA,EAAG,CAACgB,QAAQ,OAAOC,eAAe,SAAQ,SACzC,eAACjB,EAAA,EAAG,CAACgB,QAAQ,OAAM,UACjB,cAAC,EAAK,CAAClB,OAAQ,IAAKF,IAAKW,EAAQc,MAAOxB,IAAKU,EAAQe,cACrD,eAACtB,EAAA,EAAG,CAACuB,IAAK,EAAE,UACV,eAACJ,EAAA,EAAU,CAACC,QAAQ,KAAI,UAAEb,EAAQiB,YAAW,UAC7C,cAACxB,EAAA,EAAG,CAACuB,GAAI,EAAE,SACT,cAACJ,EAAA,EAAU,CAACC,QAAQ,KAAI,SAAEb,EAAQe,2BAM3Cd,EAASiB,KAAI,SAACC,EAAYC,GAAC,OAC1B,eAACjB,EAAA,EAAI,CACHG,MAAI,EAEJC,GAAI,EACJC,OAAO,kBACPd,EAAG,EACH2B,IAAK,EACLZ,QAAQ,OACRa,cAAc,SACdC,WAAW,SAAQ,UAEnB,cAAC9B,EAAA,EAAG,UACF,cAACmB,EAAA,EAAU,CAACC,QAAQ,KAAI,SAAEM,EAAWK,iBAEvC,cAAC,EAAK,CAACjC,OAAQ,IAAKF,IAAK8B,EAAWL,MAAOxB,IAAK6B,EAAWJ,cAC3D,cAACtB,EAAA,EAAG,UACF,eAACmB,EAAA,EAAU,CAACC,QAAQ,KAAKY,WAAW,OAAM,UACvCN,EAAWF,YAAW,cAftBE,EAAWK,aAkBX,QAKjB,C,mCC1DA,oCAWeE,UANiB,WAAH,OAC3B,cAAC,IAAI,CAACzC,YAAY,kBAAiB,SACjC,cAAC,IAAU,KACN,C","file":"static/js/6.0fefa696.chunk.js","sourcesContent":["import { forwardRef } from 'react';\nimport type { HTMLProps, ReactNode } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Box } from '@mui/material';\n\ninterface IProps extends HTMLProps<HTMLDivElement> {\n  children?: ReactNode;\n  windowTitle: string;\n}\n\nconst Page = forwardRef<HTMLDivElement, IProps>((props, ref) => {\n  const { children, windowTitle } = props;\n\n  return (\n    <Box ref={ref as any} flexGrow={1} width=\"100%\">\n      <Helmet>\n        <title>{windowTitle}</title>\n      </Helmet>\n      {children}\n    </Box>\n  );\n});\n\nexport { Page };\n","import type { FC } from 'react';\nimport { Box } from '@mui/material';\n\ninterface LogoProps {\n  src: string;\n  alt?: string;\n  height: string | number | undefined;\n  padding?: number;\n}\n\nconst Image: FC<LogoProps> = (props) => {\n  const { src, alt = 'Image', height, padding = 0 } = props;\n  return (\n    <Box p={padding}>\n      <img height={height} alt={alt} src={src} />\n    </Box>\n  );\n};\n\nexport { Image };\n","import { Box, Grid, Typography } from '@mui/material';\nimport type { FC } from 'react';\nimport { Image } from 'src/components/Image';\nimport { useWeather } from 'src/context/useWeather';\n\ninterface IProps {}\n\nconst WeatherBox: FC<IProps> = () => {\n  const { isLoadingWeather, weatherDays } = useWeather();\n  if (isLoadingWeather) return <Box>Loading...</Box>;\n  if (weatherDays.length < 5) return <Box>API did not fetch properly</Box>;\n\n  const firstEl = weatherDays[0];\n  const otherEls = weatherDays.slice(1, 5);\n  return (\n    <Box>\n      <Grid container spacing={2}>\n        <Grid item md={12} border=\"5px solid white\" p={2}>\n          <Box display=\"flex\" justifyContent=\"center\" mb={4}>\n            <Typography variant=\"h2\">Today</Typography>\n          </Box>\n          <Box display=\"flex\" justifyContent=\"center\">\n            <Box display=\"flex\">\n              <Image height={200} src={firstEl.image} alt={firstEl.description} />\n              <Box ml={-8}>\n                <Typography variant=\"h1\">{firstEl.temperature}°</Typography>\n                <Box ml={2}>\n                  <Typography variant=\"h2\">{firstEl.description}</Typography>\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Grid>\n        {otherEls.map((weatherDay, i) => (\n          <Grid\n            item\n            key={weatherDay.dateFormated}\n            md={3}\n            border=\"5px solid white\"\n            p={2}\n            mt={-1}\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n          >\n            <Box>\n              <Typography variant=\"h3\">{weatherDay.dateFormated}</Typography>\n            </Box>\n            <Image height={100} src={weatherDay.image} alt={weatherDay.description} />\n            <Box>\n              <Typography variant=\"h3\" fontWeight=\"bold\">\n                {weatherDay.temperature}°\n              </Typography>\n            </Box>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport { WeatherBox };\n","import type { FC } from 'react';\nimport { Page } from 'src/components/Page';\nimport { WeatherBox } from './@shared/WeatherBox';\n\ninterface IProps {}\n\nconst TorontoPage: FC<IProps> = () => (\n  <Page windowTitle=\"Toronto Weather\">\n    <WeatherBox />\n  </Page>\n);\n\nexport default TorontoPage;\n"],"sourceRoot":""}